apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.guralnya.notification_tracker"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def buildType = variant.buildType.name
                def flavor = variant.flavorName
                output.outputFileName = "notification_tracker" + "." + flavor + "." + buildType + "." + getTime() + ".apk"
            }
        }
    }
    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile file("../NotificationTracker.jks")
            storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
        }
        debug {
            storeFile file('../debug.keystore')
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField "String", "PIN_ALIAS", keystoreProperties['PIN_ALIAS']
            buildConfigField "String", "DB_PASS_ALIAS", keystoreProperties['DB_PASS_ALIAS']
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            buildConfigField "String", "PIN_ALIAS", keystoreProperties['PIN_ALIAS']
            buildConfigField "String", "DB_PASS_ALIAS", keystoreProperties['DB_PASS_ALIAS']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def static getTime() {
    return new Date().format("ddMMHHmm", TimeZone.getDefault())
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //Room
    implementation "androidx.room:room-runtime:2.2.5"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"

    //Cipher for DB
    implementation 'net.zetetic:android-database-sqlcipher:4.3.0'
    implementation "androidx.sqlite:sqlite:2.1.0"

    //koin
    implementation 'org.koin:koin-android:1.0.2'
    implementation 'org.koin:koin-android-viewmodel:1.0.2'
    implementation 'org.koin:koin-androidx-scope:1.0.2'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0-alpha06"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.0-alpha06"

    //Joda Time
    implementation 'net.danlew:android.joda:2.10.1.2'

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
